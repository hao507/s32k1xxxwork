#ifndef NXPLIB_NXPQUEUE_H
#define NXPLIB_NXPQUEUE_H

#include <stdio.h>
#include <stdlib.h>

/* ??: ????????(??rear)??????,?????(??front)??????????
 * ?????????  ?????????   ???????????
 */

/*=====???????????========
 *
 *  ?? ----------------- ??
 *   <--- a1,a2,a3,...,an <---
 *      -----------------
 *
 *================================*/

typedef enum
{
    OK=0, //??
    ERROR=1,   //??
    TRUE=2,  //??
    FALSE=3   //??
}status;

typedef struct {
	//unsigned int canbusId;
	//unsigned char canbusData[8];
	unsigned char data;
}ElemType;   //??????????

#define MAX_SIZE 200

/*???????????????????
 *????????????????????*/
// ????????????
typedef struct QUEUE
{
    ElemType *pBase;    //????
    int front;      //????
    int rear;       //????
    int maxSize;    //?????????
}queue;

//????? queueCapacity-????
status initQueue(queue *PQueue,int queueCapacity);
//????
void destroyQueue(queue *PQueue);
//????
void clearQueue(queue *PQueue);
//????????
status isEmpityQueue(queue *PQueue);
//????????
status isFullQueue(queue *PQueue);
//??????
int getQueueLen(queue *PQueue);
//????? [??????:????????] element-?????
status enQueue(queue *PQueue,ElemType element);
//?????,????????? [??????:????????]
status deQueue(queue *PQueue,ElemType *pElement);
//????
void queueTraverse(queue *PQueue);


//--------------------------------------------------------------------------
typedef struct {
	unsigned int canbusId;
	unsigned char canbusData[8];
}ElemTypeCan;   //??????????


typedef struct QUEUECAN
{
	ElemTypeCan *pBase;    
    int front;      
    int rear;       
    int maxSize;    
}queueCan;

status initQueueCan(queueCan *PQueue,int queueCapacity);

void destroyQueueCan(queueCan *PQueue);

void clearQueueCan(queueCan *PQueue);

status isEmpityQueueCan(queueCan *PQueue);

status isFullQueueCan(queueCan *PQueue);

int getQueueLenCan(queueCan *PQueue);

status enQueueCan(queueCan *PQueue,ElemTypeCan element);

status deQueueCan(queueCan *PQueue,ElemTypeCan *pElement);

void queueTraverseCan(queueCan *PQueue);
#endif

