<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\nxp142_app.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\nxp142_app.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Fri Nov 15 10:28:03 2019
<BR><P>
<H3>Maximum Stack Usage =        168 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; uartInit &rArr; initQueue &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[d]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">NMI_Handler</a><BR>
 <LI><a href="#[e]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">HardFault_Handler</a><BR>
 <LI><a href="#[f]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">MemManage_Handler</a><BR>
 <LI><a href="#[10]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">BusFault_Handler</a><BR>
 <LI><a href="#[11]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">UsageFault_Handler</a><BR>
 <LI><a href="#[12]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">SVC_Handler</a><BR>
 <LI><a href="#[13]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[13]">DebugMon_Handler</a><BR>
 <LI><a href="#[14]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14]">PendSV_Handler</a><BR>
 <LI><a href="#[15]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">SysTick_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[3d]">ADC0_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[3e]">ADC1_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[10]">BusFault_Handler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[65]">CAN0_Error_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[67]">CAN0_ORed_0_15_MB_IRQHandler</a> from canbus.o(i.CAN0_ORed_0_15_MB_IRQHandler) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[68]">CAN0_ORed_16_31_MB_IRQHandler</a> from canbus.o(i.CAN0_ORed_16_31_MB_IRQHandler) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[64]">CAN0_ORed_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[66]">CAN0_Wake_Up_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[6c]">CAN1_Error_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[6e]">CAN1_ORed_0_15_MB_IRQHandler</a> from canbus.o(i.CAN1_ORed_0_15_MB_IRQHandler) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[6b]">CAN1_ORed_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[3f]">CMP0_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[16]">DMA0_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[20]">DMA10_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[21]">DMA11_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[22]">DMA12_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[23]">DMA13_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[24]">DMA14_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[25]">DMA15_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[17]">DMA1_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[18]">DMA2_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[19]">DMA3_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[1a]">DMA4_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[1b]">DMA5_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[1c]">DMA6_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[1d]">DMA7_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[1e]">DMA8_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[1f]">DMA9_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[26]">DMA_Error_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[13]">DebugMon_Handler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[91]">DefaultISR</a> from startup_s32k142.o(.text) referenced 116 times from startup_s32k142.o(RESET)
 <LI><a href="#[43]">ERM_double_fault_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[42]">ERM_single_fault_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[5b]">FLEXIO_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[2b]">FTFC_Fault_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[28]">FTFC_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[79]">FTM0_Ch0_Ch1_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[7a]">FTM0_Ch2_Ch3_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[7b]">FTM0_Ch4_Ch5_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[7c]">FTM0_Ch6_Ch7_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[7d]">FTM0_Fault_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[7e]">FTM0_Ovf_Reload_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[7f]">FTM1_Ch0_Ch1_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[80]">FTM1_Ch2_Ch3_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[81]">FTM1_Ch4_Ch5_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[82]">FTM1_Ch6_Ch7_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[83]">FTM1_Fault_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[84]">FTM1_Ovf_Reload_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[85]">FTM2_Ch0_Ch1_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[86]">FTM2_Ch2_Ch3_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[87]">FTM2_Ch4_Ch5_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[88]">FTM2_Ch6_Ch7_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[89]">FTM2_Fault_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[8a]">FTM2_Ovf_Reload_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[8b]">FTM3_Ch0_Ch1_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[8c]">FTM3_Ch2_Ch3_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[8d]">FTM3_Ch4_Ch5_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[8e]">FTM3_Ch6_Ch7_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[8f]">FTM3_Fault_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[90]">FTM3_Ovf_Reload_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[e]">HardFault_Handler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[2e]">LPI2C0_Master_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[2f]">LPI2C0_Slave_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[46]">LPIT0_Ch0_IRQHandler</a> from timer.o(i.LPIT0_Ch0_IRQHandler) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[47]">LPIT0_Ch1_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[48]">LPIT0_Ch2_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[49]">LPIT0_Ch3_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[30]">LPSPI0_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[31]">LPSPI1_IRQHandler</a> from spi.o(i.LPSPI1_IRQHandler) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[50]">LPTMR0_IRQHandler</a> from timer.o(i.LPTMR0_IRQHandler) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[35]">LPUART0_RxTx_IRQHandler</a> from uart.o(i.LPUART0_RxTx_IRQHandler) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[37]">LPUART1_RxTx_IRQHandler</a> from uart.o(i.LPUART1_RxTx_IRQHandler) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[2a]">LVD_LVW_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[27]">MCM_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[f]">MemManage_Handler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[d]">NMI_Handler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[4a]">PDB0_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[5a]">PDB1_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[51]">PORTA_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[52]">PORTB_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[53]">PORTC_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[54]">PORTD_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[55]">PORTE_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[14]">PendSV_Handler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[2d]">RCM_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[44]">RTC_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[45]">RTC_Seconds_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[29]">Read_Collision_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[6a]">Reserved100_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[6d]">Reserved103_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[6f]">Reserved105_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[70]">Reserved106_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[71]">Reserved107_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[72]">Reserved108_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[73]">Reserved109_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[74]">Reserved110_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[75]">Reserved111_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[76]">Reserved112_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[77]">Reserved113_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[78]">Reserved114_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[32]">Reserved44_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[33]">Reserved45_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[34]">Reserved46_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[36]">Reserved48_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[38]">Reserved50_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[39]">Reserved51_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[3a]">Reserved52_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[3b]">Reserved53_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[3c]">Reserved54_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[40]">Reserved58_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[41]">Reserved59_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[4b]">Reserved69_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[4c]">Reserved70_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[4d]">Reserved71_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[4e]">Reserved72_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[57]">Reserved81_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[58]">Reserved82_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[59]">Reserved83_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[5c]">Reserved86_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[5d]">Reserved87_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[5e]">Reserved88_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[5f]">Reserved89_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[60]">Reserved90_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[61]">Reserved91_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[62]">Reserved92_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[63]">Reserved93_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[69]">Reserved99_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[c]">Reset_Handler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[4f]">SCG_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[12]">SVC_Handler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[56]">SWI_IRQHandler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[15]">SysTick_Handler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[9]">SystemInit</a> from system_s32k142.o(i.SystemInit) referenced from startup_s32k142.o(.text)
 <LI><a href="#[11]">UsageFault_Handler</a> from startup_s32k142.o(.text) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[2c]">WDOG_EWM_IRQHandler</a> from watchdog.o(i.WDOG_EWM_IRQHandler) referenced from startup_s32k142.o(RESET)
 <LI><a href="#[92]">__main</a> from __main.o(!!!main) referenced from startup_s32k142.o(.text)
 <LI><a href="#[a]">init_data_bss</a> from startup.o(i.init_data_bss) referenced from startup_s32k142.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[92]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[93]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[95]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[ef]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[f0]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[96]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[f1]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[9c]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[97]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[99]"></a>__rt_lib_init_heap_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit5.o(.ARM.Collect$$libinit$$00000008))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_heap_2 &rArr; _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[f2]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[f3]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[f4]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[f5]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[f6]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[f7]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[f8]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[f9]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[fa]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[fb]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[fc]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[fd]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[fe]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[ff]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[100]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[101]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[102]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[103]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[104]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[105]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[a1]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[106]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[107]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[108]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[109]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[10a]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[10b]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[10c]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[94]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[10d]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[10e]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry7.o(.ARM.Collect$$rtentry$$00000007))

<P><STRONG><a name="[9b]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[10f]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[9d]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; uartInit &rArr; initQueue &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[110]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[b2]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[a0]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[111]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[a2]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[c]"></a>Reset_Handler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[112]"></a>_maybe_terminate_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, maybetermalloc1.o(.emb_text), UNUSED)

<P><STRONG><a name="[d]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>ADC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DefaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>CAN0_Error_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>CAN0_ORed_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>CAN0_Wake_Up_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>CAN1_Error_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>CAN1_ORed_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>CMP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>DMA10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>DMA11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>DMA12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>DMA13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>DMA14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>DMA15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>DMA8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>DMA9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>DMA_Error_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[91]"></a>DefaultISR</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>ERM_double_fault_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>ERM_single_fault_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>FLEXIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>FTFC_Fault_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>FTFC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>FTM0_Ch0_Ch1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>FTM0_Ch2_Ch3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>FTM0_Ch4_Ch5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>FTM0_Ch6_Ch7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>FTM0_Fault_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>FTM0_Ovf_Reload_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>FTM1_Ch0_Ch1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>FTM1_Ch2_Ch3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>FTM1_Ch4_Ch5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>FTM1_Ch6_Ch7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>FTM1_Fault_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>FTM1_Ovf_Reload_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>FTM2_Ch0_Ch1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>FTM2_Ch2_Ch3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>FTM2_Ch4_Ch5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>FTM2_Ch6_Ch7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>FTM2_Fault_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>FTM2_Ovf_Reload_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>FTM3_Ch0_Ch1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>FTM3_Ch2_Ch3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>FTM3_Ch4_Ch5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>FTM3_Ch6_Ch7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[8f]"></a>FTM3_Fault_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>FTM3_Ovf_Reload_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>LPI2C0_Master_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>LPI2C0_Slave_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>LPIT0_Ch1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>LPIT0_Ch2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>LPIT0_Ch3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>LPSPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>LVD_LVW_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>MCM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>PDB0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>PDB1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>PORTA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>PORTB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>PORTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>PORTD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>PORTE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>RCM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>RTC_Seconds_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>Read_Collision_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>Reserved100_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>Reserved103_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>Reserved105_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>Reserved106_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>Reserved107_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>Reserved108_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>Reserved109_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>Reserved110_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>Reserved111_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>Reserved112_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>Reserved113_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>Reserved114_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>Reserved44_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>Reserved45_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>Reserved46_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>Reserved48_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>Reserved50_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>Reserved51_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>Reserved52_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>Reserved53_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>Reserved54_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>Reserved58_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>Reserved59_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>Reserved69_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>Reserved70_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>Reserved71_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>Reserved72_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>Reserved81_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>Reserved82_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>Reserved83_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>Reserved86_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>Reserved87_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>Reserved88_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>Reserved89_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>Reserved90_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>Reserved91_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>Reserved92_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>Reserved93_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>Reserved99_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>SCG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>SWI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_s32k142.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[a4]"></a>malloc</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, h1_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initQueueCan
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initQueue
</UL>

<P><STRONG><a name="[a7]"></a>free</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, h1_free.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = free
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>

<P><STRONG><a name="[e5]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartReadIrq
</UL>

<P><STRONG><a name="[a8]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[113]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[a9]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartInit
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[114]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[115]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[116]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[db]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_zynq_type2
</UL>

<P><STRONG><a name="[aa]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[117]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[b6]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_FPGA_data_Power_list_type2
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Analysis_zynq_type2
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartReadIrqReset
</UL>

<P><STRONG><a name="[118]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[119]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[ab]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[a5]"></a>__rt_heap_descriptor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_heap_descriptor_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[11a]"></a>__use_no_heap</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[11b]"></a>__heap$guard</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[7]"></a>_terminate_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[3]"></a>_init_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[a6]"></a>__Heap_Full</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[ad]"></a>__Heap_Broken</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[9a]"></a>_init_alloc</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_heap_2
</UL>

<P><STRONG><a name="[af]"></a>__Heap_Initialize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, h1_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[2]"></a>__Heap_DescSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, h1_init.o(.text), UNUSED)

<P><STRONG><a name="[ac]"></a>__Heap_ProvideMemory</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, h1_extend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[ae]"></a>__rt_SIGRTMEM</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_rtmem_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Broken
</UL>

<P><STRONG><a name="[11c]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[11d]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[11e]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[9f]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[b1]"></a>__sig_exit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, defsig_exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[b0]"></a>__rt_SIGRTMEM_inner</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, defsig_rtmem_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[a3]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>

<P><STRONG><a name="[b3]"></a>__default_signal_display</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, defsig_general.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
</UL>

<P><STRONG><a name="[b4]"></a>_ttywrch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sys_wrch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>

<P><STRONG><a name="[b5]"></a>Analysis_zynq_type2</STRONG> (Thumb, 378 bytes, Stack size 40 bytes, type2_power.o(i.Analysis_zynq_type2))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Analysis_zynq_type2 &rArr; Execution_type2_VCC_12V_EN &rArr; GpioSetVal
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Execution_type2_VCC_12V_EN
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Execution_type2_TYPE2_ZYNQV
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_zynq_type2
</UL>

<P><STRONG><a name="[67]"></a>CAN0_ORed_0_15_MB_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 24 bytes, canbus.o(i.CAN0_ORed_0_15_MB_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = CAN0_ORed_0_15_MB_IRQHandler &rArr; Canbus0Recv &rArr; enQueueCan &rArr; deQueueCan
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Canbus0Recv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>CAN0_ORed_16_31_MB_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 24 bytes, canbus.o(i.CAN0_ORed_16_31_MB_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = CAN0_ORed_16_31_MB_IRQHandler &rArr; Canbus0Recv &rArr; enQueueCan &rArr; deQueueCan
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Canbus0Recv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>CAN1_ORed_0_15_MB_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 24 bytes, canbus.o(i.CAN1_ORed_0_15_MB_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = CAN1_ORed_0_15_MB_IRQHandler &rArr; Canbus1Recv &rArr; enQueueCan &rArr; deQueueCan
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Canbus1Recv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[bb]"></a>Canbus0Init</STRONG> (Thumb, 344 bytes, Stack size 16 bytes, canbus.o(i.Canbus0Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Canbus0Init &rArr; canbusParaInit &rArr; initQueueCan &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canbusParaInit
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d4]"></a>Canbus0IrqInit</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, canbus.o(i.Canbus0IrqInit))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b9]"></a>Canbus0Recv</STRONG> (Thumb, 348 bytes, Stack size 32 bytes, canbus.o(i.Canbus0Recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Canbus0Recv &rArr; enQueueCan &rArr; deQueueCan
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enQueueCan
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0_ORed_16_31_MB_IRQHandler
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0_ORed_0_15_MB_IRQHandler
</UL>

<P><STRONG><a name="[d5]"></a>Canbus1Init</STRONG> (Thumb, 340 bytes, Stack size 12 bytes, canbus.o(i.Canbus1Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Canbus1Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d6]"></a>Canbus1IrqInit</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, canbus.o(i.Canbus1IrqInit))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ba]"></a>Canbus1Recv</STRONG> (Thumb, 350 bytes, Stack size 32 bytes, canbus.o(i.Canbus1Recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Canbus1Recv &rArr; enQueueCan &rArr; deQueueCan
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enQueueCan
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_ORed_0_15_MB_IRQHandler
</UL>

<P><STRONG><a name="[df]"></a>Canbus1Send</STRONG> (Thumb, 150 bytes, Stack size 20 bytes, canbus.o(i.Canbus1Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Canbus1Send
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;type2mcu_send_switch_status_type0mcu
</UL>

<P><STRONG><a name="[b7]"></a>Execution_type2_TYPE2_ZYNQV</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, type2_power.o(i.Execution_type2_TYPE2_ZYNQV))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Execution_type2_TYPE2_ZYNQV &rArr; GpioSetVal
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioSetVal
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Analysis_zynq_type2
</UL>

<P><STRONG><a name="[b8]"></a>Execution_type2_VCC_12V_EN</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, type2_power.o(i.Execution_type2_VCC_12V_EN))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Execution_type2_VCC_12V_EN &rArr; GpioSetVal
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioSetVal
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Analysis_zynq_type2
</UL>

<P><STRONG><a name="[ca]"></a>GpioInit</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, gpio.o(i.GpioInit))
<BR><BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ivcu_poweron
</UL>

<P><STRONG><a name="[cb]"></a>GpioSetDirection</STRONG> (Thumb, 284 bytes, Stack size 12 bytes, gpio.o(i.GpioSetDirection))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GpioSetDirection
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdgTps_init
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ivcu_poweron
</UL>

<P><STRONG><a name="[be]"></a>GpioSetVal</STRONG> (Thumb, 234 bytes, Stack size 8 bytes, gpio.o(i.GpioSetVal))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GpioSetVal
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Execution_type2_VCC_12V_EN
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Execution_type2_TYPE2_ZYNQV
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdgTps_init
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ivcu_poweron
</UL>

<P><STRONG><a name="[46]"></a>LPIT0_Ch0_IRQHandler</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, timer.o(i.LPIT0_Ch0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>LPSPI1_IRQHandler</STRONG> (Thumb, 248 bytes, Stack size 40 bytes, spi.o(i.LPSPI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = LPSPI1_IRQHandler &rArr; enQueue &rArr; deQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getQueueLen
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enQueue
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deQueue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>LPTMR0_IRQHandler</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, timer.o(i.LPTMR0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[d0]"></a>LPTMR_init</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, timer.o(i.LPTMR_init))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[35]"></a>LPUART0_RxTx_IRQHandler</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, uart.o(i.LPUART0_RxTx_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LPUART0_RxTx_IRQHandler &rArr; enQueue &rArr; deQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getQueueLen
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enQueue
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deQueue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>LPUART1_RxTx_IRQHandler</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, uart.o(i.LPUART1_RxTx_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LPUART1_RxTx_IRQHandler &rArr; enQueue &rArr; deQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getQueueLen
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enQueue
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deQueue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[cf]"></a>NormalRUNmode_80MHz</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, clocks_and_modes.o(i.NormalRUNmode_80MHz))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cd]"></a>SOSC_init_8MHz</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, clocks_and_modes.o(i.SOSC_init_8MHz))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ce]"></a>SPLL_init_160MHz</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, clocks_and_modes.o(i.SPLL_init_160MHz))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9]"></a>SystemInit</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, system_s32k142.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(.text)
</UL>
<P><STRONG><a name="[e6]"></a>TimerCreate</STRONG> (Thumb, 144 bytes, Stack size 12 bytes, timer.o(i.TimerCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TimerCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdgTps_init
</UL>

<P><STRONG><a name="[2c]"></a>WDOG_EWM_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, watchdog.o(i.WDOG_EWM_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(RESET)
</UL>
<P><STRONG><a name="[bc]"></a>canbusParaInit</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, canbus.o(i.canbusParaInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = canbusParaInit &rArr; initQueueCan &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initQueueCan
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Canbus0Init
</UL>

<P><STRONG><a name="[c0]"></a>deQueue</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, nxpqueue.o(i.deQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = deQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isEmpityQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI1_IRQHandler
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enQueue
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART1_RxTx_IRQHandler
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART0_RxTx_IRQHandler
</UL>

<P><STRONG><a name="[c4]"></a>deQueueCan</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, nxpqueue.o(i.deQueueCan))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = deQueueCan
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isEmpityQueueCan
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enQueueCan
</UL>

<P><STRONG><a name="[cc]"></a>delay</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, main.o(i.delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = delay
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ivcu_poweron
</UL>

<P><STRONG><a name="[bf]"></a>enQueue</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, nxpqueue.o(i.enQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = enQueue &rArr; deQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isFullQueue
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartSendIrq
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI1_IRQHandler
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART1_RxTx_IRQHandler
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART0_RxTx_IRQHandler
</UL>

<P><STRONG><a name="[bd]"></a>enQueueCan</STRONG> (Thumb, 66 bytes, Stack size 36 bytes, nxpqueue.o(i.enQueueCan))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = enQueueCan &rArr; deQueueCan
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deQueueCan
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isFullQueueCan
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Canbus1Recv
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Canbus0Recv
</UL>

<P><STRONG><a name="[c1]"></a>getQueueLen</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, nxpqueue.o(i.getQueueLen))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPSPI1_IRQHandler
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART1_RxTx_IRQHandler
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART0_RxTx_IRQHandler
</UL>

<P><STRONG><a name="[c8]"></a>initQueue</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, nxpqueue.o(i.initQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = initQueue &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartInit
</UL>

<P><STRONG><a name="[c2]"></a>initQueueCan</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, nxpqueue.o(i.initQueueCan))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = initQueueCan &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;canbusParaInit
</UL>

<P><STRONG><a name="[a]"></a>init_data_bss</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, startup.o(i.init_data_bss))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = init_data_bss
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_s32k142.o(.text)
</UL>
<P><STRONG><a name="[c3]"></a>isEmpityQueue</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, nxpqueue.o(i.isEmpityQueue))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deQueue
</UL>

<P><STRONG><a name="[c5]"></a>isEmpityQueueCan</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, nxpqueue.o(i.isEmpityQueueCan))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deQueueCan
</UL>

<P><STRONG><a name="[c6]"></a>isFullQueue</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, nxpqueue.o(i.isFullQueue))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enQueue
</UL>

<P><STRONG><a name="[c7]"></a>isFullQueueCan</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, nxpqueue.o(i.isFullQueueCan))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enQueueCan
</UL>

<P><STRONG><a name="[c9]"></a>ivcu_poweron</STRONG> (Thumb, 250 bytes, Stack size 8 bytes, main.o(i.ivcu_poweron))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ivcu_poweron &rArr; GpioSetDirection
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioSetVal
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioSetDirection
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioInit
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9e]"></a>main</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = main &rArr; uartInit &rArr; initQueue &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdgTps_init
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartIrqInit
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartInit
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_zynq_request_type2
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_zynq_type2
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPLL_init_160MHz
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SOSC_init_8MHz
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NormalRUNmode_80MHz
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTMR_init
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Canbus1IrqInit
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Canbus1Init
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Canbus0IrqInit
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Canbus0Init
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ivcu_poweron
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[d8]"></a>receive_zynq_type2</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, type2_power.o(i.receive_zynq_type2))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = receive_zynq_type2 &rArr; send_FPGA_data_Power_list_type2 &rArr; uartSendIrq &rArr; enQueue &rArr; deQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;type2mcu_send_switch_status_type0mcu
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_FPGA_data_Power_list_type2
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Analysis_zynq_type2
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartReadIrqReset
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartReadIrq
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dd]"></a>send_FPGA_data_Power_list_type2</STRONG> (Thumb, 340 bytes, Stack size 72 bytes, type2_power.o(i.send_FPGA_data_Power_list_type2))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = send_FPGA_data_Power_list_type2 &rArr; uartSendIrq &rArr; enQueue &rArr; deQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartSendIrq
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_zynq_type2
</UL>

<P><STRONG><a name="[d7]"></a>send_zynq_request_type2</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, type2_power.o(i.send_zynq_request_type2))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = send_zynq_request_type2 &rArr; uartSendIrq &rArr; enQueue &rArr; deQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartSendIrq
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[da]"></a>type2mcu_send_switch_status_type0mcu</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, type2_power.o(i.type2mcu_send_switch_status_type0mcu))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = type2mcu_send_switch_status_type0mcu &rArr; Canbus1Send
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Canbus1Send
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_zynq_type2
</UL>

<P><STRONG><a name="[d2]"></a>uartInit</STRONG> (Thumb, 454 bytes, Stack size 104 bytes, uart.o(i.uartInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = uartInit &rArr; initQueue &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initQueue
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d3]"></a>uartIrqInit</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, uart.o(i.uartIrqInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uartIrqInit
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d9]"></a>uartReadIrq</STRONG> (Thumb, 264 bytes, Stack size 24 bytes, uart.o(i.uartReadIrq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uartReadIrq
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_zynq_type2
</UL>

<P><STRONG><a name="[dc]"></a>uartReadIrqReset</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, uart.o(i.uartReadIrqReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = uartReadIrqReset &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_zynq_type2
</UL>

<P><STRONG><a name="[de]"></a>uartSendIrq</STRONG> (Thumb, 250 bytes, Stack size 32 bytes, uart.o(i.uartSendIrq))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = uartSendIrq &rArr; enQueue &rArr; deQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_FPGA_data_Power_list_type2
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_zynq_request_type2
</UL>

<P><STRONG><a name="[d1]"></a>wdgTps_init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, wdgtps.o(i.wdgTps_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = wdgTps_init &rArr; TimerCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerCreate
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioSetVal
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioSetDirection
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e3]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartInit
</UL>

<P><STRONG><a name="[e7]"></a>_dadd</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[e2]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartInit
</UL>

<P><STRONG><a name="[eb]"></a>_ddiv</STRONG> (Thumb, 552 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[e4]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartInit
</UL>

<P><STRONG><a name="[ec]"></a>_dfix</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[e0]"></a>__aeabi_i2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartInit
</UL>

<P><STRONG><a name="[11f]"></a>_dflt</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[e1]"></a>__aeabi_ui2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartInit
</UL>

<P><STRONG><a name="[120]"></a>_dfltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu), UNUSED)

<P><STRONG><a name="[ea]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[e9]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[121]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)

<P><STRONG><a name="[ed]"></a>_dsub</STRONG> (Thumb, 464 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[98]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[122]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[123]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[ee]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
</UL>

<P><STRONG><a name="[e8]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
